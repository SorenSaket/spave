pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
debug = false

entities = {}

score = 0

-- system functions
function tagget(tag)
	local items = {}
	
	for i in all(entities) do
		if i.tag != nil and i.tag == tag then
			add(items, i)
		end
	end
	return items
end


function _init()
	music(0)
	-- add player
	p.init(p)
	p.x = 40
	p.y = 80
	-- create room
 tr = createroom(1)
 tr = fillcube(tr,7,7,9,6,0)
 tr = fillcube(tr,9,14,3,6,0)
 
 setroom(tr)
end


function _update60()
	-- update all entities
	if p.health > 0 then
 	for e in all(entities) do
 		e.update(e)
 	end
	end
	
	if score == 50 then
		roomtype=4
	end
end

function _draw()
	-- clear screen
	cls()
	
	if p.health > 0 then
 	-- draw map
 	map(0,0,0,0,16,16)
 	map(16,0,0,0,16,16)
 	-- draw entities
 	for e in all(entities) do
 		e.draw(e)
 	end
 	
 
 	color(0)
 	rectfill(2,2,17,12)
 	color(12)
 	line(3,11,3+13*(1-p.firetimer),11)
	 if p.health == 3 then
 		spr(240,2,2,2,1)
 	elseif p.health == 2 then
 		spr(242,2,2,2,1)
 	else
 		spr(244,2,2,2,1)
 	end
	else
		print("rip... score:"..score,8,8)
	end
	
	if debug then
		color(14)
		
		--print(stat(0),8,8)
		--print(stat(1),8,16)
		--print(stat(2),8,24)
		
		print(p.grounded,2,16)
 	print(p.xv.." + "..p.xv,2,24)

	end
end


-->8
-- entities & physics

physics = {
	g=0.1,		// gravity
	d=0.1,		//
	adm=0.5 // air drag multiplier
}

p = {
	tag = "player",
	hitjump	=false,
	
	-- stats --
	health=3,
	firerate=1,
	damage=1,
	range=3,
	firetimer=1,
	
	invtime=1.6,
	invtimer=0,
	
	-- physics --
	hasgravity=true,
	xacc = 0.2, -- acceleration
	xmax = 1.3, -- max speed
	jvmin= 0.1, -- min jump velocity
	jv			= 0.4, -- jump velocity
	jvmax= 6,			-- max jump height
	
	-- visuals
	cs=1,
	jspr={4},   -- jumpsprite
	wspr={2,3},-- walk sprites
	animspd = 0.12,
	animtimer=0,  -- walk sprite timer
	
		
 init = function(this)
 	this = addstatics(this)
 	add(entities,p)
 end,
 update = function(this)
		controlplayer()
		if this.invtimer > 0 then
			this.invtimer-= 1/stat(7)
		end
		updateentity(this)
 end,
 draw = function(this)
 	drawentity(this)
 end,
 hit = function(this, dmg,hkb,vkb)
 	if this.invtimer <= 0 then
  	this.invtimer = this.invtime
  	sfx(2)
  	this.health-= dmg
  	this.xv += hkb
  	this.yv += vkb
 	end
 end
}

--------- enemies ---------
function enemy_fb ()
 return {
 	tag= "enemy",
 	-- stats --
 	health=3,
 	chaserange=8,
 	
 	-- physics --
 	hasgravity=false,
 	spd=0.2,
 	hkb=5,
 	vkb=1,
 	
 	-- visuals
 	wspr={32,33,34,33,32},
 	animspd = 0.12,
 	
 	init = function(this)
 		addstatics(this)
 	end,
 	update = function(this)
 	 local dist = dist({x=this.x,y=this.y},{x=p.x,y=p.y})
			if dist < this.chaserange*8then 
 			movetowards(this,p)
 		end
 		if dist < 5 then
 			local dif = p.x - this.x
 			p.xv = (dif/abs(dif))*this.hkb
 			p.hit(p,1,0,-this.vkb)
 		end
 	end,
 	draw = function(this)
 		drawentity(this)
 	end
 }
end

function enemy_snake ()
 return {
 	tag= "enemy",
 	-- stats --
 	health=3,
 	hkb=3,
 	vkb=2,
 	
 	-- physics --
 	hasgravity=true,
 	xacc = 0.3, -- acceleration
		xmax = 0.3,
 	right=true,
 	
 	-- visuals
 	cs=16,
 	jspr={16,17},
 	wspr={16,17},
 	animspd = 0.12,
 	
 	init = function(this)
 		addstatics(this)
 	end,
 	update = function(this)
 		if abs(p.x-this.x) < 4 and abs(p.y-this.y) < 4 then 
 			local dif = p.x - this.x
 			
 			-- if stoming
 			if p.yv > 0 then
					p.yv=-2
					sfx(2)
					score+=1
					del(entities,this)
 			else
 				p.hit(p,1,(dif/abs(dif))*this.hkb,-this.vkb)
 			end
			end
 		
 		-- movement
 		if this.grounded then
 		 if this.right then
  			this.xv += this.xacc
  			if issolid(this.x+9, this.y+4) or not issolid(this.x+9, this.y+12)  then
  				this.right = false
  			end
  		else
  			this.xv -= this.xacc
  			if issolid(this.x-1, this.y+4) or not issolid(this.x-1, this.y+12)  then
  				this.right = true
  			end
  		end
 		end
 		updateentity(this)
 	end,
 	draw = function(this)
 		drawentity(this)
 	end
 }
end

function enemy_spike ()
 return {
 	tag= "enemy",
 	-- stats --
 	health=3,
 	hkb=4,
 	vkb=2,
 	
 	-- visuals
 	wspr=36,
 	
 	init = function(this)
 		addstatics(this)
 	end,
 	update = function(this)
 		
			if abs(p.x-this.x) < 4 and abs(p.y-this.y) < 4 and p.yv > 0 then 
 			this.wspr=20
 			local dif = p.x - this.x
 			p.hit(p,1,(dif/abs(dif))*this.hkb,-this.vkb)
 		end
 	end,
 	draw = function(this)
 		spr(this.wspr,this.x,this.y)
 	end
 }
end

function coin ()
	return {
 	tag = "collectable",
 	-- physics --
 	hasgravity=false,
 	
 	-- visuals
 	wspr={144,145,146,147,146,145,144},
 	animspd = 0.12,
 	init = function(this)
 		addstatics(this)
 	end,
 	update = function(this)
			if abs(p.x-this.x) < 4 and abs(p.y-this.y) < 4 then
				score+=1
				sfx(3)
				del(entities,this)
			end
			
		
			
		end,
 	draw = function(this)
 		drawentity(this)
 	end
	}
end

function projectile_lazer ()
 return{
 	tag = "projectile",
 	x = 0,
 	y = 0,
 	x2 = 0,
 	y2 = 0,
 	
 	lifetime = 0.1,
 	damage = 1,
 	tolerance = 4,
 	
 	st= 1,
 	
 	init = function(this,_x1,_y1,_x2,_y2)
 		this.st = this.lifetime
 		this.x 	= _x1
 		this.y 	= _y1
 		this.x2 = _x2
 		this.y2 = _y2
 		
 		for e in all(tagget("enemy")) do
				local xd = this.x-this.x2
				local xdt = this.x - e.x
				if (xd > 0 and xdt > 0) or (xd < 0 and xdt < 0)then
 				if abs(xdt-4) < abs(xd) then
 					if abs((this.y-4) - e.y) < 8 then
 						score+=1
 						sfx(2)
 						del(entities,e)
 					end
 				end
				end
			end
			
 	end,
 	update = function(this)
 		this.lifetime -= 1/stat(7)
  	if this.lifetime <= 0 then
  		del(entities, this)
  	end
 		
 	end,
 	draw = function(this)
 		drawlazer(this.x,this.y,this.x2,this.y2, this.lifetime/this.st)
 	end
 }
end
-->8
function addstatics(e)
	e.x=1	--x position
	e.y=64--y position
	e.xv=0--x velociy
	e.yv=0--y velociy
	e.grounded=false-- is grounded
	e.flipped=false	--is flipped
	e.flippedy=false
	e.animtimer=0
	return e
end

function updateentity(e)
	-- ungrounded
	e.grounded = false
	
	-- starting postions
	--local lastx = e.x
	--local lasty = e.y
	
	-- gravity
	if e.hasgravity then
		e.yv += physics.g
	end
	
	-- apply drag
	if e.xv > 0.01 then
		e.xv -= physics.d
	elseif e.xv < -0.01 then
		e.xv += physics.d
	else
		e.xv = 0
	end
	
	-- max speed
	if e.xv > e.xmax then
		e.xv = e.xmax
	elseif e.xv < -e.xmax then
		e.xv = -e.xmax
	end
	
	-- apply movement
	e.x += e.xv
	e.y += e.yv
	
	-- collisions
	
	-- if walking right
	if(e.xv > 0)then
		-- if tile is to the right
 	if issolid(e.x+8,e.y+4) then
 		e.xv = 0
 		e.x 	= flr((e.x)/8)*8
 	end
 	e.flipped = false
 
 -- else if walking left
	elseif(e.xv < 0)then
		if issolid(e.x,e.y+4) then
 		
 		e.xv = 0
 		e.x = flr((e.x+8)/8)*8
 	end
 	e.flipped = true
	end
		
	-- down
	if (e.yv >=0) then
 	if issolid(e.x+1,e.y+8) or issolid(e.x+7 ,e.y+8) then
 		e.yv = 0
 		e.y = flr((e.y)/8)*8
 		e.grounded = true
		end
 end
 -- up
	if(e.yv <= 0)then
 	if issolid(e.x+4,e.y) then
 		e.yv = 0
 		e.y = flr((e.y+8)/8)*8
 	end
	end
end


function drawentity(e)
	local cspr = e.cs
	
	local frame = flr(e.animtimer)
	
	if e.hasgravity then
		if not e.grounded then
 		if e.jspr != nil then
 			cspr = e.jspr[(frame % #e.jspr) +1]
 		end
 	elseif e.xv != 0 then
 		if e.wspr != nil then
 			cspr = e.wspr[(frame % #e.wspr) +1]
 		end
 	end
	else
		if e.wspr != nil then
 			cspr = e.wspr[(frame % #e.wspr) +1]
 	end
	end
	
	spr(cspr,e.x,e.y,1,1,e.flipped,e.flippedy)
	
	-- prevent reaching maximum int value
	if e.animtimer > 32766 then
		e.animtimer = 0
	end
	
	e.animtimer+=e.animspd
end


-->8
function controlplayer()
	
	-- shooting
	if p.firetimer > 0 then
		p.firetimer-= 1/stat(7)
	elseif btn(4) then
		sfx(1)
		p.firetimer = p.firerate
		local pjt = projectile_lazer()
		
		if p.flipped then
			pjt.init(pjt,p.x,p.y+4,p.x-p.range*8,p.y+4) 
		else
			pjt.init(pjt,p.x+8,p.y+4,p.x+8+p.range*8,p.y+4) 		
		end
		add(entities, pjt)
	end
	
	-- vertical movement
	if(btnp(2)) and p.grounded then
		p.yv -= p.jvmin
		p.lasty = p.y
		sfx(0)
	end
	
	-- if going up and pressed button
	if btn(2) and p.yv < 0  then
		if abs(p.lasty - p.y) < p.jvmax then
			p.yv -= p.jv
		end
	end
	
	-- horizontal movement
	if(btn(1)) then
		p.xv += p.xacc
	end
	if(btn(0)) then
		p.xv -= p.xacc
	end
	
	if p.x > 128 or p.y > 128 then
		p.x = 1
		p.y = 64
		
 	newroom(true)
	elseif p.x < 0 then
		p.x = 127
		p.y = 64
 	
 	newroom(false)
	end
end



-->8
--genration

function newroom(right)
	local enemies = tagget("enemy")
	
	for i in all(enemies) do
		del(entities, i)
	end
	
	local col = tagget("collectable")
	
	for i in all(col) do
		del(entities, i)
	end
	
	clearroom()
	tr = generateroom(right)
	setroom(tr)
end

roomtype = 2
function generateroom(right)
	local temproom = createroom(roomtype)
	
	local chunksize = 2
	local cy = 8
	local mincy
	local maxcy
	
	
	--temproom = fillcube(temproom,flr(rnd(15)),flr(rnd(15)),flr(rnd(2))+1,flr(rnd(2))+1,1)
	
	
	for x = 0, 15 do

		chunksize = flr(rnd(4))+1
		mincy = chunksize + 1
		maxcy = 15 - (chunksize+1)
		
		local cx
		
		if right then
			cx = x
		else
			cx = 15-x
		end
		
		temproom = fillcube(temproom,cx,cy,chunksize,chunksize,0)
		
		if ((cx+1)%3)-2 == 0 then
			local c = coin ()
			c.init(c)
			c.x = cx*8
			c.y = cy*8
			add(entities,c)
		end
		
		
		if flr(rnd(2)) == 1 then
		 cy+=1
		else
			cy-=1
		end
		
		if(cy < mincy)then
			cy = mincy
		end
		if(cy > maxcy)then
			cy = maxcy
		end
	end
	
	temproom = fillrow(temproom,0,roomtype)
	temproom = fillrow(temproom,15,roomtype)


	local spawnpoints = {}
	local fspawnpoints = {}

 for i = 4, 11 do
  for j = 1, 14 do
  	if temproom[i][j] == 0 then
  		if temproom[i][j+1] > 0 then
  			add(fspawnpoints,{x=i,y=j})
  		else
  			add(spawnpoints,{x=i,y=j})
  		end
  	end
  end
 end
	
	
	
	-- spawn enemies
	
	for n = 0, flr(rnd(2)) do
		if #spawnpoints > 0 then
  	local index = flr(rnd(#spawnpoints-1)+1)
  	local point = spawnpoints[index]
  	spawnenemy(false, point.x,point.y)
  	del(spawnpoints, point)
		end
	end

	for n = 0, flr(rnd(3)) do
		if #fspawnpoints > 0 then
  	local index = flr(rnd(#fspawnpoints-1)+1)
  	local point = fspawnpoints[index]
  	spawnenemy(true, point.x,point.y)
  	del(fspawnpoints, point)
		end
	end

	return temproom
end


function spawnenemy(g,tx,ty)
	
	local e
	
	if g then
 	local index = rnd(1)
 	if index >=0.5 then
 		 e = enemy_snake ()
 	else
 		 e = enemy_spike ()
 	end
	else
		e = enemy_fb ()
	end

	e.init(e)
	e.x = tx*8
	e.y = ty*8
	add(entities,e)
end
-->8
--tilesets
tilesets = {
	{
		autotile=true,
		solid=2,
		tiles={
			{
				id=0,
				sprid=81
			},
			{
				id=1,
				sprid=81
			},
			{
				id=2,
				sprid=81
			},
			{
				id=3,
				sprid=98,
				flipx=true,
				flipy=true
			},
			{
				id=4,
				sprid=81
			},
			{
				id=5,
				sprid=96,
				flipy=true
			},
			{
				id=6,
				sprid=65
			},
			{
				id=7,
				sprid=65
			},
			{
				id=8,
				sprid=81
			},
			{
				id=9,
				sprid=82
			},
			{
				id=10,
				sprid=66,
				flipx=true
			},
			{
				id=11,
				sprid=80
			},
			{
				id=12,
				sprid=64
			},
			{
				id=13,
				sprid=82
			},
			{
				id=14,
				sprid=97
			},
			{
				id=15,
				sprid=81
			}
		}
	},
	-------- grass --------
	{
		autotile=true,
		solid=2,
		tiles={
			{
				id=0,
				sprid=119
			},
			{
				id=1,
				sprid=71
			},
			{
				id=2,
				sprid=118
			},
			{
				id=3,
				sprid=102
			},
			{
				id=4,
				sprid=116
			},
			{
				id=5,
				sprid=100
			},
			{
				id=6,
				sprid=117
			},
			{
				id=7,
				sprid=101
			},
			{
				id=8,
				sprid=87
			},
			{
				id=9,
				sprid=103
			},
			{
				id=10,
				sprid=70
			},
			{
				id=11,
				sprid=86
			},
			{
				id=12,
				sprid=68
			},
			{
				id=13,
				sprid=84
			},
			{
				id=14,
				sprid=69
			},
			{
				id=15,
				sprid=85
			}
		}
	},
	-------- crystal --------
	{
		autotile=true,
		solid=2,
		tiles={
			{
				id=0,
				sprid=123
			},
			{
				id=1,
				sprid=75
			},
			{
				id=2,
				sprid=122
			},
			{
				id=3,
				sprid=106
			},
			{
				id=4,
				sprid=120
			},
			{
				id=5,
				sprid=104
			},
			{
				id=6,
				sprid=121
			},
			{
				id=7,
				sprid=105
			},
			{
				id=8,
				sprid=91
			},
			{
				id=9,
				sprid=107
			},
			{
				id=10,
				sprid=74
			},
			{
				id=11,
				sprid=90
			},
			{
				id=12,
				sprid=72
			},
			{
				id=13,
				sprid=88
			},
			{
				id=14,
				sprid=73
			},
			{
				id=15,
				sprid=89
			}
		}
	},
	-------- stone --------
	{
		autotile=true,
		solid=2,
		tiles={
			{
				id=0,
				sprid=127
			},
			{
				id=1,
				sprid=111
			},
			{
				id=2,
				sprid=112
			},
			{
				id=3,
				sprid=110
			},
			{
				id=4,
				sprid=124
			},
			{
				id=5,
				sprid=108
			},
			{
				id=6,
				sprid=125
			},
			{
				id=7,
				sprid=109
			},
			{
				id=8,
				sprid=79
			},
			{
				id=9,
				sprid=95
			},
			{
				id=10,
				sprid=78
			},
			{
				id=11,
				sprid=94
			},
			{
				id=12,
				sprid=76
			},
			{
				id=13,
				sprid=92
			},
			{
				id=14,
				sprid=77
			},
			{
				id=15,
				sprid=93
			}
		}
	}
}

-->8
--map
currentroom = {}

currentmap = {}

function createroom(fill)
 room = {}
 for i = 0, 15 do
  room[i] = {}
  for j = 0, 15 do
  	room[i][j] = fill -- fill the values here
  end
 end
 return room
end

--	use to set the current map with mset
function setroom(r)
	for x = 0, 15 do
  for y = 0, 15 do
  	cts = r[x][y]
  	if(cts > 0)then
 			cspr = tilesets[cts].tiles[gettileid(r,x,y,cts)]
  		mset(x,y,cspr.sprid)
  	end
  end
 end
end


function renderroom(r)
	for x = 0, 15 do
  for y = 0, 15 do
  	cts = r[x][y]
  	if(cts > 0)then
 			cspr = tilesets[cts].tiles[gettileid(r,x,y,cts)]
  		spr(cspr.sprid,x*8,y*8,1,1,cspr.flipx,cspr.flipy)
  	end
  end
 end
end

function gettileid(r,x,y,t)
	up = 0
	down = 0
	left = 0
	right = 0
	
	if(x+1 < 16 and r[x+1][y] == t) or x+1 >= 16 then
 	right = 1
	end
	if(x-1 > -1 and r[x-1][y] == t) or x-1 <= -1 then
		left = 1
	end
	if(y-1 > -1 and r[x][y-1] == t) or y-1 <= -1 then
		up = 1
	end
	if(y+1 < 16 and r[x][y+1] == t) or y+1 >= 16  then
		down = 1
	end
	
	return (1*up)+(2*left)+(4*right)+(8*down)+1
end


function fillrow(r,col,num)
	for x = 0, 15 do
   r[x][col] = num
 end
	return r
end

function fillcol(r,row,num)
	for y = 0, 15 do
   r[row][y] = num
 end
	return r
end

function fillcube(r,x,y,w,h,num)
	for cy = 0, h do
		for cx = 0, w do
			local ccx = x-flr(w/2) + cx
			local ccy = y-flr(h/2) + cy
			if ccx < 16 and ccx > -1 and ccy < 16 and ccy > -1 then
				r[ccx][ccy] = num
			end
  end
 end
	return r
end

function clearroom()
	for x = 0, 15 do
  for y = 0, 15 do
  	mset(x,y,0)
  end
 end
end
-->8
// this page is reserved for
// a framework that is going to
// be buildt to help further
// development of other games

// common functions
// 
function issolid(x,y)
	if(fget(mget(x/8,y/8)) == 1)then
		return true
	else
		return false
	end
end

function movetowards(enemy, player)
	
	if dist({x=enemy.x,y=enemy.y},{x=player.x,y=player.y}) > 4 then
 	edir = { x = enemy.x - player.x,
 										y = enemy.y - player.y}
 	edir = v_normalize(edir)
 	
 	if edir.x < 0 then
 		enemy.flipped = true
 	else
 		enemy.flipped = false
 	end
 	if edir.y > 0 then
 		enemy.flippedy = true
 	else
 		enemy.flippedy = false
 	end
 	enemy.x -= edir.x*0.3
 	enemy.y -= edir.y*0.3
	end
end

function drawlazer(x1,y1,x2,y2,i)
 if i > .5 then
  line(x1, y1, x2, y2, 7)
  line(x1, y1+1, x2, y2+1, 10)
  line(x1, y1-1, x2, y2-1, 10)
  line(x1, y1+2, x2, y2+1, 8)
  line(x1, y1-2, x2, y2-1, 8)
 elseif i > .2 then
 	line(x1, y1, x2, y2, 8)
  line(x1, y1+1, x2, y2+1, 10)
  line(x1, y1-1, x2, y2-1, 10)
  line(x1, y1+2, x2, y2+1, 2)
  line(x1, y1-2, x2, y2-1, 2)
 else
 	line(x1, y1, 	x2, y2, 10)
  line(x1, y1+1, x2, y2, 2)
  line(x1, y1-1, x2, y2, 2)
 end
 
end

--methods for handling math between 2d vectors
-- vectors are tables with x,y variables inside

-- contributors: warrenm

function dist(v1,v2)
	return sqrt((v2.x-v1.x)^2 + (v2.y-v1.y)^2)
end

-- add v1 to v2
function v_addv( v1, v2 )
  return { x = v1.x + v2.x, y = v1.y + v2.y }
end

-- subtract v2 from v1
function v_subv( v1, v2 )
  return { x = v1.x - v2.x, y = v1.y - v2.y }
end

-- multiply v by scalar n
function v_mults( v, n )
  return { x = v.x * n, y = v.y * n }
end

-- divide v by scalar n
function v_divs( v, n )
  return { x = v.x / n, y = v.y / n }
end

-- gets magnitude of v, squared (faster than v_mag)
function v_magsqr( v )
  return ( v.x * v.x ) + ( v.y * v.y )
end

-- compute magnitude of v
function v_mag( v )
  return sqrt( ( v.x * v.x ) + ( v.y * v.y ) )
end

-- normalizes v into a unit vector
function v_normalize( v )
  local len = v_mag( v )
  return { x = v.x / len, y = v.y / len }
end

-- computes dot product between v1 and v2
function v_dot( v1, v2 )
   return ( v1.x * v2.x ) + ( v1.y * v2.y )
end

-- computes the reflection vector between vector v and normal n
-- note : assumes v and n are normalized
function v_reflect( v, n )
  local dot = v_dot( v, n )
  local wdnv = v_mults( v_mults( n, dot ), 2.0 )
  local refv = v_subv( v, wdnv )
  return refv
end

// draw a rotated sprite *wipw*
function rspr(n,x,y,angle)

		xs = (n%16) * 8
		ys = (n%16) * 8
		for xi=0,8 do
 		for yi=0,8 do
 			cx = x*cos(angle)-y*sin(angle)
 			cy = y*cos(angle)+x*sin(angle)
 			col = sget(xs+xi, ys+yi)
 			pset(cx,cy,col)
 			printh(
 			xs.." _ "..
 			ys.." _ "..
 			cx.." _ "..
 			cy.." _ "..
 			col, "@clip")
 		end
		end
end

function tostring(any)
    if type(any)=="function" then 
        return "function" 
    end
    if any==nil then 
        return "nil" 
    end
    if type(any)=="string" then
        return any
    end
    if type(any)=="boolean" then
        if any then return "true" end
        return "false"
    end
    if type(any)=="table" then
        local str = "{ "
        for k,v in pairs(any) do
            str=str..tostring(k).."->"..tostring(v).." "
        end
        return str.."}"
    end
    if type(any)=="number" then
        return ""..any
    end
    return "unkown" -- should never show
end
__gfx__
0000000006777000067770000677700006777000000000000000000000000000000000000000000000000000f08880f0f08880f00f888f00f08880f000000000
0000000007899900078999000789990007897700000000000000000000000000000000000000000000000000ff8888f0ff8888f08f888800ff1881f000000000
00700700679977006799770067997700679999000000000000000000000000000000000000000000000000008818810088188100088188008888880600000000
00077000779999007799990077999900779999660000000000000000000000000000000000000000000000000888880608888806088888600888886000000000
00077000877776868777768687777686877776800000000000000000000000000000000000000000000000000888806008888060088886008888828000000000
0070070077777d6077777d6077777d6077777d000000000000000000000000000000000000000000000000008882828088828280028828000882808000000000
00000000077770000777700007777000077770000000000000000000000000000000000000000000000000000888808008888080088888000888808000000000
00000000060060006000060000660000060060000000000000000000000000000000000000000000000000000800208080000280002800000800200000000000
00003330000333000003330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003aa33003aa3300033033000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003a033003a03300030333000b33300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003330800333080b03330800baabb30008000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b0003bb00003bb00b003bb00baabbbb3008000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
b30003bbbb303bb0b3003bb03abbbbb1088008800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
330033bb03303bb033003bb03b3333b1086007800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0333bbb0003bbb00033bbb0003331110066606660000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00e00e0000e00e000000000000666700000000000077770000820000008200000d6666d00d6666d0000000000000000000000000000000000000000000000000
02e88e2002e00e2002e00e20066666700000000007ddd67000782000007820000668866006622660000000000000000000000000000000000000000000000000
ee8888eeee8888ee0ee88ee015561166000000007ddd66d76088800200888002068ee86006288260000000000000000000000000000000000000000000000000
0887788000877800008778006661e8160070007076666dd76888877868888778068ee86006288260000000000000000000000000000000000000000000000000
08817880008178000081780015518e11007000700677776068888778688887786668866666622666000000000000000000000000000000000000000000000000
ee8888eeee8888ee0ee88ee066661166076007600600006060888002008880026006600660066006000000000000000000000000000000000000000000000000
02e88e2002e00e2002e00e200156667007600760070000700078200000782000008ee80000288200000000000000000000000000000000000000000000000000
00e00e0000e00e000000000000666700066606660700007000820000008200000006600000066000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000500d0d0d0d050000001010101000000ddddddddddddd5000000332223000422222222222222222240022111220d6666666666666666666666dd666666d
000001d11d1d1d1d1d10000010101010005dddddddddddddddddd500034223300422222222222222222222402211222066666666666666666666666666666666
00d155d11d1d1d1d1d551d001010101005ddd544444444445ddddd50004224004221111111111111111112242211222066111111111111111111116666111166
001d15d11d1d1d1d1d51d100101010100dd444444444444444444dd000442400221111111111111111111122422120406615dddddddd515ddddd516666dd5166
005161611616161616161500101010100d54444444444444444444d00004240022111111111111111111112202214000661dddddddddd1ddddddd16666ddd166
015516655656565656615510101010105d44444442222444444444d500044400221111111111111111111122042200006615dddddddd515ddddd516666dd5166
5ddd6675575757575766ddd510101010dd44444222222222244444dd000440002211111111111111111111220024000066111111111111111111116666111166
0111155006060606055111101010101044444422222222222244444400004000221111111111111111111122004000006615ddddd515dddddddd51666615dd66
dddd6676d666666d6766dddd1111111144444222222222222244444405dddd5022111111111111111111112200000000661ddddddd1dddddddddd166661ddd66
0111155065dddd5605511110000000004444442222222222224444445dddddd5221111111111111111111122000000006615ddddd515dddddddd51666615dd66
dddd66766d6666d66766dddd11111111444444222222222222444444ddd22ddd221111111111111111111122000a000066111111111111111111116666111166
011115506d6766d60551111000000000444444422222222222444444dd2442dd22111111111111111111112200ab006c6615dddddddd515ddddd516666dd5166
dddd66766d6666d66766dddd11111111444442422222222222244444dd4444dd22111111111111111111112200bb06cd661dddddddddd1ddddddd16666ddd166
011115506d6666d60551111000000000444444422222222224244444dd4224dd221111111111111111111122fe3b36c06615dddddddd515ddddd516666dd5166
dddd667665dddd566766dddd11111111444444222222222222244444dd2222dd22111111111111111111112228e3ccd066111111111111111111116666111166
01111550d666666d0551111000000000444442222222222222444444dd2222dd221111111111111111111122028ecd006615ddddd515dddddddd51666615dd66
01111550606060600551111011111111344444422222222224444443dd2222dd22111111111111111111112204222240661ddddddd1dddddddddd166661ddd66
5ddd6675757575755766ddd510000001334444442442222244443333dd4222dd221111111111111111111122422222246615ddddd515dddddddd51666615dd66
01551665656565655661551010111101b34444442222444444433330dd4222dd4221111111111111111112242221122266111111111111111111116666111166
00516161616161611616150010111101033333444444444333333330dd2224dd042222222222222222222240221111226615dddddddd515ddddd516666dd5166
001d15d1d1d1d1d11d51d100101111010333333333333333333330b0dd2224dd00422222222222222222240022111122661dddddddddd1ddddddd16666ddd166
00d155d1d1d1d1d11d551d00101111010030333333333333b30030b0dd2222dd000022200222042404042000221111226615dddddddd515ddddd516666dd5166
000001d1d1d1d1d11d1000001000000100b0003000b0030000003000dd4222dd0000424004240040000040002211112266666666666666666666666666666666
00000050d0d0d0d005000000111111110000000000000b000000b000dd4222dd00000400004000000000000022111122d6666666666666666666666dd666666d
9444444477777777777777770000000005dddddddddddddddddddd50005dd50004222222222222222222224004222240d6666666666666666666666dd666666d
424111146d6666d667777776000000005dddddddddddddddddddddd505dddd504222222222222222222222244222222466666666666666666666666666666666
41492224666666666677776600000000ddd244224422244222442ddd5dd44dd52221111111111111111112222221112266ddd11111ddd11111ddd16666111166
42149224666666666667766600000000dd24422222222222222442dddd4224dd2211111111111111111111222211112266ddd15d51ddd15d51ddd1666615d166
4221492466666666666dd66600000000dd24422222222222222442dd3342243322111111111111111111112222111122665d51ddd15d51ddd15d5166661d5166
422214946666666666dddd6600000000ddd244222224422222442ddd3334433022211111111111111111122222111222661111ddd11111ddd111116666111166
422221446d6666d66dddddd6000000005dddddddddddddddddddddd5b03333b04222222222222222222222244222222466666666666666666666666666666666
44444442dddddddddddddddd0000000005dddddddddddddddddddd500000b00004222222222222222222224004222240d6666666666666666666666dd666666d
0006c000000e8000000ab00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00666c0000eee80000aaab0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0666c6c00eee8e800aaabab000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
666dcccceee28888aaa3bbbb00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cccc6ddd8888e222bbbba33300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0cdcddd0082822200b3b333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00cddd000082220000b3330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000cd00000082000000b300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
007aaa00007aaa000007a000000aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
078998a0078998a000788a0000099000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
787aaa8a0a97a9a000a99a00000aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a9aaaa9a0a9aa9a000a99a0000099000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a9aaaa9a0a9aa9a000a99a00000aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
a8aaaa890a9aa9a000a99a0000099000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0a8998900a89989000a88900000aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00aaa90000aaa900000a900000099000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00977900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
aa7777aa000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9aa77aa9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
097aa790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0aaaaaa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
9a9009a9000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
99000099000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000666666666666660006666006600006666666666
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006666666666666666066666606600006666666666
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006660000066000666666006666600006666000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006600000066000066660000666660066666000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006600000066000066660000660660066066000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006600000066000066660000660660066066000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006600000066000066660000660660066066000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006660000066000666660000660666666066666000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006666666066666666666666660666666066666000
00888008880088800088800888001110008880011100111000000000000000000000000000000000000000000666666666666660666666660066660066000000
00888008880088800088800888001110008880011100111000000000000000000000000000000000000000000000066666000000660000660066660066000000
08888088880888800888808888011110088880111101111000000000000000000000000000000000000000000000006666000000660000660066660066000000
08888088880888800888808888011110088880111101111000000000000000000000000000000000000000000000006666000000660000660066660066000000
08880088800888000888008880011100088800111001110000000000000000000000000000000000000000000000066666000000660000660006600066000000
08880088800888000888008880011100088800111001110000000000000000000000000000000000000000006666666666000000660000660006600066666666
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000006666666066000000660000660006600066666666
__label__
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222888288822222888288228882882222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222822282222222828228222282282222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222888288822222888228228882282222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222228222822222228228228222282222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222888288822822228288828882888222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222888222228822888288228822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222828222222822828228222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222828222222822888228222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222828222222822828228222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222888228228882888288828882222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222888222228822888288828822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222828222222822828222822822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222828222222822888288822822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222828222222822828282222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222888228228882888288828882222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222828222228882888222222222222288822222888288828882888222222222222222222222222222222222222222222222222222222222222222222222
22222222828222228282822222222822222222822222822282822282228222222222222222222222222222222222222222222222222222222222222222222222
22222222888222228282888222228882222222822222888288822282888222222222222222222222222222222222222222222222222222222222222222222222
22222222228222228282228222222822222222822222228282822282822222222222222222222222222222222222222222222222222222222222222222222222
22222222228228228882888222222222222222822822888288822282888222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222888222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222828222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222828222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222828222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222888222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222888222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
24422222248222222442222224422222244222222442222224422222244222222442222224422222244222222442222222222222222222222222222222222222
22224444888244442222444422224444222244442222444422224444222244442222444422224444222244442222444422222222222222222222222222222222
44444443844444434444444344444443444444434444444344444443444444434444444344444443444444434444444322222222222222222222222222222222
33333333888333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222222222222222222222222222
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333322222222222222222222222222222222
00b0030000b0030000b0030000b0030000b0030000b0030000b0030000b0030000b0030000b0030000b0030000b0030022222222222222222222222222222222
00000b0000000b0000000b0000000b0000000b0000000b0000000b0000000b0000000b0000000b0000000b0000000b0022222222222222222222222222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044444222222222222222222222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044444422222222222222222222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044444422222222222222222222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044444442222222222222222222222222
00000000000000000000000000000000067770000000000000000000000000000000000000000000000000000000000044444242222222222222222222222222
00000000000000000000000000000000078977000000000000000000000000000000000000000000000000000000000044444442222222222222222222222222
00000000000000000000000000000000679999008888888888888888888888888000000000000000000000000000000044444422222222222222222222222222
0000000000000000000000000000000077999966aaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000000000044444222222222222222222222222222
00000000000000000000000000000000877776807777777777777777777777777000000000000000000000000000000034444442222222222222222222222222
0000000000000000000000000000000077777d00aaaaaaaaaaaaaaaaaaaaaaaaa000000000000000000000000000000033444444244222222222222222222222
000000000000000000000000000000000777700088888888888888888888888880000000000000000000000000000000b3444444222244442222222222222222
00000000000000000000000000000000060060000000000000000000000000000000000000000000000000000000000003333344444444432222222222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003333333333333332222222222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000303333333333332222222222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0003000b003002222222222222222
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b000000b002222222222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004444422222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004444442222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004444442222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004444444222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004444424222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004444444222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004444442222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004444422222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003444444222222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003344444422222222
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b344444422222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000333334422222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000333333322222222
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000030333322222222
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b0003022222222
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b022222222
dddddddddd5000000000000000000000000000000000000005dddd50000000000000000000000000000000000000000000000000000000000000000034444442
ddddddddddddd500000000000000000000000000000000005dddddd5000000000000000000000000000000000000000000000000000000000000000033444444
444444445ddddd5000000000000000000000000000000000ddd22ddd0000000000000000000000000000000000000000000000000000000000000000b3444444
4444444444444dd000000000000000000000000000000000dd2442dd000000000000000000000000000000000000000000000000000000000000000003333344
44444444444444d000000000000000000000000000000000dd4444dd000000000000000000000000000000000000000000000000000000000000000003333333
42222444444444d500000000000000000000000000000000dd4224dd000000000000000000000000000000000000000000000000000000000000000000303333
22222222244444dd00000000000000000000000000000000dd2222dd000000000000000000000000000000000000000000000000000000000000000000b00030
222222222244444400000000000000000000000000000000dd2222dd0000000000000000000000000000000000000000000000000000000000000000000000b0
2222222222222222dddddddddddddddddddddddddddddddd22222222dddddddddddddddddd500000000000000000000000000000000000000000000000000000
2222222222222222dddddddddddddddddddddddddddddddd22222222ddddddddddddddddddddd500000000000000000000000000000000000000000000000000
2222222222222222444444444444444444444444444444442222222244444444444444445ddddd50000000000000000000000000000000000000000000000000
22222222222222224444444444444444444444444444444422222222444444444444444444444dd0000000000000000000000000000000000000000000000000
222222222222222244444444444444444444444444444444222222224444444444444444444444d0000000000000000000000000000000000000000000000000
222222222222222242222444422224444222244442222444222222224222244442222444444444d5000000000000000000000000000000000000000000000000
222222222222222222222222222222222222222222222222222222222222222222222222244444dd000000000000000000000000000000000000000000000000
22222222222222222222222222222222222222222222222222222222222222222222222222444444000000000000000000000000000000000000000000000000
22222222222222222222222222222222222222222222222222222222222222222222222222444444000000000000000000000000000000000000000000000000
22222222222222222222222222222222222222222222222222222222222222222222222222444444000000000000000000000000000000000000000000000000
22222222222222222222222222222222222222222222222222222222222222222222222222444444000000000000000000000000000000000000000000000000
22222222222222222222222222222222222222222222222222222222222222222222222222444444000000000000000000000000000000000000000000000000
22222222222222222222222222222222222222222222222222222222222222222222222222244444000000000000000000000000000000000000000000000000
22222222222222222222222222222222222222222222222222222222222222222222222224244444000000000000000000000000000000000000000000000000
22222222222222222222222222222222222222222222222222222222222222222222222222244444000000000000000000000000000000000000000000000000
22222222222222222222222222222222222222222222222222222222222222222222222222444444000000000000000000000000000000000000000000000000
22222222222222222222222222222222222222222222222222222222222222222222222222222222dddddddddddddddddddddddddddddddddd50000000000000
22222222222222222222222222222222222222222222222222222222222222222222222222222222ddddddddddddddddddddddddddddddddddddd50000000000
22222222222222222222222222222222222222222222222222222222222222222222222222222222444444444444444444444444444444445ddddd5000000000
222222222222222222222222222222222222222222222222222222222222222222222222222222224444444444444444444444444444444444444dd000000000
2222222222222222222222222222222222222222222222222222222222222222222222222222222244444444444444444444444444444444444444d000000000
2222222222222222222222222222222222222222222222222222222222222222222222222222222242222444422224444222244442222444444444d500000000
2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222244444dd00000000
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222244444400000000
222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222dddddddd
222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222dddddddd
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222244444444
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222244444444
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222244444444
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222242222444
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222

__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100010101000101010001010101010101000101010101010100010101010101010001010101000000010101010100000000010101010101010101010101
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000000000102003020070200a0201002022020310203f0203f0000c0000f3003a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000003f22032220232201d220162200f2200822005220032200222001220000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000003f620326202a62021620146200e6200762003600026000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01000000012100321005210072100a2100e2101321016210192101d2102021024210272102b2102d2103121034220372203a2203d2203f2202d4003320036200392003a2003c2003f20000000000000000000000
010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000200c0333f4003f4003f400206133f4003f4003f4000c0333f4000c0433f400206133f400206133f4000c0333f400000003f400206133f4003f4003f4000c0333f4000c0433f400206133f4001b6003f400
01180020001750c100001002410002175001000c1000c1050417500100101000010002175001000e100001050517500100111000010002175001000c1000c1050417500100101000010000175001001810000105
0118002018765187001c7651a7651a7651f7651a765187651c7651c7001c7651f765217651f7651a765187651c765187001c7651a7651f7651c7651f7651c7651876518700187651c7651a765187001c76500700
0118002018765187001c7651a7651a7651f7651a765187651c7651c7001c7651f765217651f7651a765187651c7651f765217651f7651a765187651a7651c7651c7651d7001c7651f7651a7651f7651a76518765
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 0b0c4040
00 0b0c4040
02 0b0d4040
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 40404040
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000
00 00000000

